{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["'use strict'\r\n\r\nconst header = document.querySelector('.header');\r\nconst sectionHome = document.querySelector('#home');\r\nconst sectionSlider = document.querySelector('.slider--container');\r\nconst sliderImages = document.querySelectorAll('.slider--image');\r\nconst sectionBook = document.querySelector('#book');\r\nconst sectionMap = document.querySelector('.map--container');\r\nconst sectionAboutUs = document.querySelector('#about_us');\r\nconst sectionReviews = document.querySelector('#reviews');\r\nconst sectionContact = document.querySelector('#contact');\r\nconst navLink = document.querySelectorAll('.nav--link');\r\nconst firstReview = document.querySelector('.first--review');\r\nconst bottomRevievs = document.querySelector('.reviews--bottom');\r\nconst headerStickySections = document.querySelectorAll('.sticky--nav');\r\nconst allSections = document.querySelectorAll('.section');\r\nconst iconArrow = document.querySelector('.icon--arrow');\r\n\r\nconst btnReviews = document.querySelector('.button--reviews');\r\nconst btnArrowLeft = document.querySelector('.button--arrow-left');\r\nconst btnArrowRight = document.querySelector('.button--arrow-right');\r\n\r\nlet curSlide = 0;\r\nlet interval;\r\n\r\nconst map = L.map('map').setView([51.505, -0.09], 13);\r\n\r\nL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n}).addTo(map);\r\n\r\ndocument.querySelector('.nav--links').addEventListener('click', function(e){\r\n    e.preventDefault();\r\n    if(e.target.classList.contains('nav--link')){\r\n        const id = e.target.getAttribute('href');\r\n        document.querySelector(id).scrollIntoView({behavior: 'smooth'});\r\n    }\r\n});\r\n\r\nbtnReviews.addEventListener('click', function(){\r\n    sectionReviews.classList.toggle('reviews--expand');\r\n    btnReviews.classList.toggle('button--reviews-expand');\r\n    btnReviews.classList.toggle('expand');\r\n    iconArrow.classList.toggle('rotate');\r\n    /* bottomRevievs.classList.toggle('reviews--bottom-hidden'); */\r\n    if(!sectionReviews.classList.contains('reviews--expand')){\r\n        sectionReviews.classList.add('reviews--collapse');\r\n    }\r\n    else {\r\n        sectionReviews.classList.remove('reviews--collapse');\r\n    }\r\n    if(!sectionReviews.classList.contains('reviews-expand')) firstReview.scrollIntoView({behavior: 'smooth'});\r\n});\r\n\r\nsliderImages.forEach((s, i) => {\r\n    s.style.transform = `translateX(${100 * i}%)`;\r\n});\r\n\r\nconst nextSlide = function(){\r\n    if(curSlide === sliderImages.length - 1) curSlide = -1;\r\n    curSlide++;\r\n    sliderImages.forEach((s, i) => s.style.transform = `translateX(${100 * (i - curSlide)}%)`);\r\n};\r\n\r\nconst previousSlide = function(){\r\n    if(curSlide === 0) curSlide = sliderImages.length;\r\n    curSlide--;\r\n    sliderImages.forEach((s, i) => s.style.transform = `translateX(${100 * (i - curSlide)}%)`);\r\n};\r\n\r\nbtnArrowRight.addEventListener('click', function(){\r\n    clearInterval(interval);\r\n    nextSlide();\r\n    autoSlider();\r\n});\r\nbtnArrowLeft.addEventListener('click', function(){\r\n    clearInterval(interval);\r\n    previousSlide();\r\n    autoSlider();\r\n});\r\n\r\nconst autoSlider = () => {\r\n    interval = setInterval(nextSlide, 5000);\r\n};\r\n\r\nautoSlider();\r\n\r\nconst imgTargets = document.querySelectorAll('img[data-src]');\r\n\r\nconst loadImg = function (entries, observer) {\r\n  const [entry] = entries;\r\n\r\n  if (!entry.isIntersecting) return;\r\n\r\n  // Replace src with data-src\r\n  entry.target.src = entry.target.dataset.src;\r\n\r\n  entry.target.addEventListener('load', function () {\r\n    entry.target.classList.remove('lazy-img');\r\n  });\r\n\r\n  observer.unobserve(entry.target);\r\n};\r\n\r\nconst imgObserver = new IntersectionObserver(loadImg, {\r\n  root: null,\r\n  threshold: 0,\r\n  rootMargin: '200px',\r\n});\r\n\r\nimgTargets.forEach(img => imgObserver.observe(img));\r\n\r\n/* const showImage = function(index){\r\n    sliderImages.forEach((img, i) => {\r\n        if(i === index) Image.style.display = 'block';\r\n        else Image.style.display = 'none';\r\n    });\r\n};\r\n */\r\n\r\n/* const stickyNav = function(entries){\r\n    const [entry] = entries;\r\n    if(!entry.isIntersecting) header.classList.add('sticky');\r\n    else header.classList.remove('sticky');\r\n    console.log(entry);\r\n};\r\n\r\nconst headerObserver = new IntersectionObserver(stickyNav, {\r\n    root: null,\r\n    threshold: 0,\r\n});\r\n\r\nheaderObserver.observe(header); */\r\n\r\n/* const revealSection = function(entries, observer){\r\n    const [entry] = entries;\r\n    if(!entry.isIntersecting) return;\r\n    entry.target.classList.remove('section--hidden');\r\n};\r\n\r\nconst sectionObserver = new IntersectionObserver(revealSection,{\r\n    root: null,\r\n    threshold: 0.15,\r\n});\r\n\r\nallSections.forEach(function(section){\r\n    sectionObserver.observe(section);\r\n    section.classList.add('section--hidden');\r\n}); */"],"names":[],"version":3,"file":"index.aa69868b.js.map","sourceRoot":"/__parcel_source_root/"}